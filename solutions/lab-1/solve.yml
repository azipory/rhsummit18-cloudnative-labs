---
- name: Solve Lab 1
  hosts: localhost
  gather_facts: false
  run_once: true
  vars_files:
  - ../vars.yml
      
  tasks:
    - name: create dev project
      shell: "oc new-project {{ dev_project }} --display-name='Catalog DEV'"
      ignore_errors: true

    - name: create catalog build in {{ dev_project }}
      shell: "oc new-build redhat-openjdk18-openshift:1.2~http://{{ gogs_hostname }}/{{ gogs_user }}/catalog.git -e MAVEN_MIRROR_URL=http://nexus.lab-infra.svc:8081/repository/maven-all-public -n {{ dev_project }}"
      ignore_errors: true

    - name: deploy catalog in {{ dev_project }}
      shell: "oc new-app -f https://raw.githubusercontent.com/{{ github_account }}/rhsummit18-cloudnative-labs/{{ github_ref }}/openshift/catalog-template.yml -n {{ dev_project }}"
      ignore_errors: true

    - name: deploy jenkins in {{ dev_project }}
      shell: "oc new-app jenkins-persistent -n {{ dev_project }}"
      ignore_errors: true

    - name: create temporary git directory
      tempfile:
        state: directory
        prefix: catalog-git
      register: git_dir

    - name: clone catalog git repository to {{ git_dir.path }}
      shell: "git clone http://{{ gogs_user }}:{{ gogs_password }}@{{ gogs_hostname }}/{{ gogs_user }}/catalog.git"
      args:
        chdir: "{{ git_dir.path }}"

    - name: create jenkinsfile
      copy:
        src: Jenkinsfile
        dest: "{{ git_dir.path }}/catalog/Jenkinsfile"

    - name: push jenkinsfile to catalog git repository
      shell: |
        git add Jenkinsfile
        git commit -m "dev pipeline added"
        git push origin master
      args:
        chdir: "{{ git_dir.path }}/catalog"

    - name: process build pipeline template
      template:
        src: pipeline.yml.j2
        dest: "{{ git_dir.path }}/pipeline.yml"

    - name: disable deployment triggers
      shell: "oc set triggers dc/catalog --manual -n {{ dev_project}}"
      ignore_errors: true

    - name: create build pipeline
      shell: "oc create -f {{ git_dir.path }}/pipeline.yml -n {{ dev_project}}"
      ignore_errors: true

    - name: extract webhook secret
      shell: |
        oc get bc catalog-build -o=jsonpath='{.spec.triggers[?(@.type=="Generic")].generic.secret}' -n {{ dev_project}}
      register: webhook_secret_result

    - name: create webhook
      uri:
        url: http://{{ gogs_hostname }}/api/v1/repos/{{ gogs_user }}/catalog/hooks
        method: POST
        body: >
          {
            "type": "gogs",
            "config": {
              "url": "{{ openshift_master }}/oapi/v1/namespaces/{{ dev_project }}/buildconfigs/catalog-build/webhooks/{{ webhook_secret_result.stdout }}/generic",
              "content_type": "json"
            },
            "events": [
              "push"
            ],
            "active": true
          }
        body_format: json
        user: "{{ gogs_user }}"
        password: "{{ gogs_password }}"
        status_code: 200,201
        force_basic_auth: true
