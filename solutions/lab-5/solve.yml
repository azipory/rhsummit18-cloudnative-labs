---
- name: Solve Lab 5
  hosts: localhost
  gather_facts: false
  run_once: true
  vars_files:
  - ../vars.yml
      
  tasks:
    - name: create temporary git directory
      tempfile:
        state: directory
        prefix: catalog-git
      register: git_dir

    - name: clone catalog git repository
      shell: "git clone http://{{ gogs_user }}:{{ gogs_password }}@{{ gogs_hostname }}/{{ gogs_user }}/catalog.git"
      args:
        chdir: "{{ git_dir.path }}"

    - name: create jenkinsfile
      copy:
        src: Jenkinsfile.release
        dest: "{{ git_dir.path }}/catalog/Jenkinsfile.release"

    - name: push jenkinsfile to catalog git repository
      shell: |
        git config user.email "rhdeveloper@redhat.com"
        git config user.name "rh-developer"
        git add Jenkinsfile.release
        git commit -m "release pipeline added"
        git push origin master
      args:
        chdir: "{{ git_dir.path }}/catalog"

    - name: process build pipeline template
      template:
        src: pipeline.yml.j2
        dest: "{{ git_dir.path }}/pipeline.yml"

    - name: create secret for git-credentials
      shell: "oc create secret generic git-credentials --from-literal=username={{ gogs_user }} --from-literal=password={{ gogs_password }} -n {{ dev_project }}"
      ignore_errors: true

    - name: label the secret for Jenkins
      shell: "oc label secret git-credentials credential.sync.jenkins.openshift.io=true -n {{ prod_project }}"
      ignore_errors: true

    - name: give Jenkins access to deploy into the prod project
      shell: "oc policy add-role-to-user system:deployer system:serviceaccount:{{ dev_project }}:jenkins -n {{ prod_project }}"
      ignore_errors: true

    - name: create release pipeline
      shell: "oc create -f {{ git_dir.path }}/pipeline.yml -n {{ dev_project}}"
      ignore_errors: true