apiVersion: v1
kind: Template
metadata:
  annotations:
    description: CoolStore Microservices - Catalog Template
    iconClass: icon-java
    tags: microservice,spring
  name: catalog
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog
    labels:
      app: catalog
  spec:
    replicas: 1
    selector:
      app: catalog
      deploymentconfig: catalog
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: catalog
          deploymentconfig: catalog
        name: catalog
      spec:
        containers:
        - image: catalog
          imagePullPolicy: Always
          name: catalog
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog
        from:
          kind: ImageStreamTag
          name: catalog:${IMAGE_VERSION}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: catalog
    name: catalog
  spec:
    ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: http
    selector:
      deploymentconfig: catalog
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: catalog
    name: catalog
  spec:
    to:
      kind: Service
      name: catalog
      weight: 100
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: catalog
    labels:
      app: catalog
  data:
    application.properties: |-
      server.port=8080
      spring.application.name=catalog
      feign.hystrix.enabled=false
      spring.datasource.url=jdbc:postgresql://catalog-postgresql:5432/catalog
      spring.datasource.username=${DB_USERNAME}
      spring.datasource.password=${DB_PASSWORD}
      spring.datasource.driver-class-name=org.postgresql.Driver
      spring.jpa.hibernate.ddl-auto=create
# Catalog Database
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog-postgresql
    labels:
      app: catalog
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: catalog
          deploymentconfig: catalog-postgresql
        name: catalog-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: catalog
          image: postgresql
          imagePullPolicy: Always
          name: catalog-postgresql
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: catalog-postgresql-data
          ports:
          - containerPort: 5432
            protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
        terminationGracePeriodSeconds: 60
        volumes:
        - name: catalog-postgresql-data
          emptyDir: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      app: catalog
    name: catalog-postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
    selector:
      deploymentconfig: catalog-postgresql
parameters:
- displayName: Image Version
  description: Catalog image version to deploy
  name: IMAGE_VERSION
  required: true
  value: latest
- description: Catalog Service database user name
  displayName: Catalog Database Username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: DB_USERNAME
  required: true
- description: Catalog Service database user password
  displayName: Catalog Database Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DB_PASSWORD
  required: true
