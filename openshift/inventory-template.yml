apiVersion: v1
kind: Template
metadata:
  annotations:
    description: CoolStore Microservices - Inventory Template
    tags: microservice,nginx
  name: inventory
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      app: ${SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${SERVICE_NAME}-html
    labels:
      app: ${SERVICE_NAME}
      component: ${SERVICE_NAME}
  data:
    329299.json: |-
      {
        "itemId":"329299",
        "quantity":78
      }
    329199.json: |-
      {
        "itemId":"329199",
        "quantity":123
      }
    165613.json: |-
      {
        "itemId":"165613",
        "quantity":303
      }
    165614.json: |-
      {
        "itemId":"165614",
        "quantity":54
      }
    165954.json: |-
      {
        "itemId":"165954",
        "quantity":407
      }
    444434.json: |-
      {
        "itemId":"444434",
        "quantity":343
      }
    444435.json: |-
      {
        "itemId":"444435",
        "quantity":85
      }
    444436.json: |-
      {
        "itemId":"444436",
        "quantity":245
      }
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${SERVICE_NAME}-config
    labels:
      app: ${SERVICE_NAME}
      component: ${SERVICE_NAME}
  data:
    default.conf: |-
      server {
        listen       8080;
        server_name  localhost;
    
        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        location /services {
            rewrite ^/services/inventory/(.*)$ /inventory/$1.json break;
            return  404;
            #root   /usr/share/nginx/html/inventory;
        }

        location / {
            #root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    
        #error_page  404              /404.html;
    
        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            #root   /usr/share/nginx/html;
        }
    
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
    
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
    
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
      }
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    port:
      targetPort: http
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
  - displayName: Service Name
    name: SERVICE_NAME
    required: true
    value: inventory
